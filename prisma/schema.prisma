// para ver los modelos despues de npx prisma studio- entrar a http://localhost:5555
//npx prisma migrate dev --name init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Afiliado {
  id          String    @id
  name        String    @db.VarChar(50)
  email       String    @db.VarChar(200)
  password    String    @db.VarChar(200)
  imageUrl    String    @db.VarChar(800)
  dni         String    @db.VarChar(8)
  phone       String    @db.VarChar(13)
  dataTime    DateTime
  role        String    @default("user") // Nuevo campo de rol
  denuncias   Denuncia[]
  opiniones   Opinion[]
  address     Address?  @relation(fields: [addressId], references: [id])
  addressId  String?
}

model Prestador {
  id           String   @id
  name         String   @db.VarChar(20)
  apellido     String   @db.VarChar(20)
  email        String   @db.VarChar(200)
  password     String   @db.VarChar(200)
  phone        String   @db.VarChar(13)
  phoneopc     String?   @db.VarChar(13)
  imageUrl     String   @db.VarChar(800)
  dataTime     DateTime
  matricula    String   @db.VarChar(5)
  especialidad String   @db.VarChar(150)
  puntuacion   Int?
  descripcion  String   @db.VarChar(600)
  role         String   @default("provider") // Nuevo campo de rol
  address     Address?  @relation(fields: [addressId], references: [id])
  addressId    String?  @default("No Fidelizado")
}

model Operador {
  id             String     @id
  name           String     @db.VarChar(50)
  email          String     @db.VarChar(200)
  password       String     @db.VarChar(200)
  imageUrl       String     @db.VarChar(800)
  phone          String     @db.VarChar(13)
  dataTime       DateTime
  numeroOperador String     @db.VarChar(5)
  role           String     @default("employee") // Nuevo campo de rol
  publicacion    Publicacion[]
  address        Address?  @relation(fields: [addressId], references: [id])
  addressId      String?
}

model Publicacion {
  id          String    @id
  titulo      String
  contenido   String
  autor       Operador  @relation(fields: [autorId], references: [id])
  autorId     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Opinion {
  id          String    @id
  contenido   String
  autor       Afiliado  @relation(fields: [autorId], references: [id])
  autorId     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Denuncia {
  id          String    @id
  motivo      String
  autor       Afiliado  @relation(fields: [autorId], references: [id])
  autorId     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Address {
  id         String     @id @default(uuid())
  street     String?
  locality   String?
  city       String?
  state      String?
  afiliado   Afiliado[]
  prestador  Prestador[]
  operador   Operador[]
}
