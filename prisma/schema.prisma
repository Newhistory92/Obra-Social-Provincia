// para ver los modelos despues de npx prisma studio- entrar a http://localhost:5555
//npx prisma migrate dev --name init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Afiliado {
  id          String    @id
  name        String    @db.VarChar(20)
  apellido    String    @db.VarChar(20)
  email       String    @db.VarChar(200)
  password    String    @db.VarChar(200)
  imageUrl    String    @db.VarChar(800)
  dni         String    @db.VarChar(8)
  phone       String    @db.VarChar(13)
    createdAt    DateTime   @default(now())
  role        Role   @default(USER) 
  denuncias   Denuncia[]
  opiniones   Opinion[]
  address     String?    @db.VarChar(200)
  coordinatesLat Int? 
  coordinatesLon Int?
  dependencia String?
  UpdatedDate DateTime  @updatedAt
}

model Prestador {
  id           String   @id
  name         String   @db.VarChar(20)
  apellido     String   @db.VarChar(20)
  email        String   @db.VarChar(200)
  password     String   @db.VarChar(200)
  phone        String   @db.VarChar(13)
  checkedphone Boolean? @default(false)
  phoneopc     String?  @db.VarChar(13)
  imageUrl     String   @db.VarChar(800)
  createdAt    DateTime   @default(now())
  UpdatedDate  DateTime  @updatedAt
  matricula    String   @db.VarChar(5)
  prestador    String   @db.VarChar(13)
  especialidad String   @db.VarChar(100)
  especialidad2 String?  @db.VarChar(100)
  especialidad3 String ? @db.VarChar(100)
  puntuacion   Int?
  descripcion  String?  @db.VarChar(600)
  role         Role     @default( PROVIDER)
  tipo         Tipo     @default( FIDELIZADO)
  address      String?  @db.VarChar(200)
  coordinatesLat Int? 
  coordinatesLon Int?
}

model Operador {
  id             String     @id
  name           String     @db.VarChar(20)
  apellido       String     @db.VarChar(20)
  email          String     @db.VarChar(200)
  password       String     @db.VarChar(200)
  imageUrl       String     @db.VarChar(800)
  phone          String     @db.VarChar(13)
  createdAt      DateTime   @default(now())
  UpdatedDate    DateTime   @updatedAt
  numeroOperador String     @db.VarChar(5)
  role           Role       @default( EMPLOYEE) 
  publicacion    Publicacion[]
  address        String?    @db.VarChar(200)
  coordinatesLat Int? 
  coordinatesLon Int?
}

model Publicacion {
  id          String    @id
  titulo      String
  contenido   String
  autor       Operador  @relation(fields: [autorId], references: [id])
  autorId     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Opinion {
  id          String    @id
  contenido   String
  autor       Afiliado  @relation(fields: [autorId], references: [id])
  autorId     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Denuncia {
  id          String    @id
  motivo      String
  autor       Afiliado  @relation(fields: [autorId], references: [id])
  autorId     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
enum Role {
  USER
  ADMIN
  PROVIDER
  EMPLOYEE
  
}

enum Tipo {
FIDELIZADO
NO_FIDELIZADO
  
}